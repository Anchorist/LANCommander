@using System.Diagnostics;
@using LANCommander.Extensions;
@using AntDesign.Charts;
<Line @ref="Chart" Config="Config" />

@code {
    [Parameter] public int TimerHistory { get; set; }
    [Parameter] public int TimerInterval { get; set; }
    IChartComponent? Chart;

    Dictionary<string, double[]> Data = new Dictionary<string, double[]>();

    Dictionary<string, PerformanceCounter> PerformanceCounters = new Dictionary<string, PerformanceCounter>();

    LineConfig Config = new LineConfig
    {
        Name = "Network Download Rate",
        Padding = "auto",
        SeriesField = "Series",
        YField = "Value",
        XField = "Index",
        XAxis = new ValueCatTimeAxis
        {
            Type = "dateTime",
            TickCount = 1
        }
    };

    protected override void OnInitialized()
    {
        var timer = new System.Timers.Timer();

        timer.Interval = TimerInterval;

        timer.Elapsed += async (s, e) =>
        {
            await RefreshData();

            await InvokeAsync(StateHasChanged);
        };

        timer.Start();
    }

    private async Task RefreshData()
    {
        var category = new PerformanceCounterCategory("Network Interface");

        foreach (var instance in category.GetInstanceNames())
        {
            if (!Data.ContainsKey(instance))
                Data[instance] = new double[TimerHistory];

            if (!PerformanceCounters.ContainsKey(instance))
                PerformanceCounters[instance] = new PerformanceCounter("Network Interface", "Bytes Received/sec", instance);

            Data[instance] = Data[instance].ShiftArrayAndInsert((double)PerformanceCounters[instance].NextValue(), TimerHistory);
        }

        await Chart.ChangeData(Data.SelectMany(x => x.Value.Select((y, i) => new { Value = y, Index = i, Series = x.Key })), true);
    }
}
