name: LANCommander Launcher

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: write

inputs:
  version_tag:
    description: 'Version Tag'
    required: true
  build_runtime:
    description: 'Build Runtime'
    required: false
    default: 'win-x64'
  build_arch:
    description: 'Build Architecture'
    required: false
    default: 'x64'
  build_platform:
    description: 'Build Platform'
    required: false
    default: 'Windows'

jobs:
  build:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: frabert/replace-string-action@v2
      name: Swap Path Backslashes
      id: swap_path_backslashes
      with:
        string: '${{ github.workspace }}'
        pattern: '\\'
        replace-with: '/'
        flags: g

    # dotnet
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore

    # Auto Updater
    - name: Publish Updater
      run: dotnet publish "./LANCommander.AutoUpdater/LANCommander.AutoUpdater.csproj" -c Release --self-contained --runtime ${{ inputs.build_runtime }} -p:Version="${{ inputs.version_tag }}" -p:AssemblyVersion="${{ inputs.version_tag }}"
    
    # UI
    - run: cd ./LANCommander.UI; npm install; npm run package

    # Launcher
    - run: cd ./LANCommander.Launcher; npm install

    - name: Publish Launcher
      run: dotnet publish "./LANCommander.Launcher/LANCommander.Launcher.csproj" -c Release --self-contained --runtime ${{ inputs.build_runtime }} -p:Version="${{ inputs.version_tag }}" -p:AssemblyVersion="${{ inputs.version_tag }}"

    # CLI
    - run: cd ./LANCommander.Launcher.CLI

    - name: Publish CLI
      run: dotnet publish "./LANCommander.Launcher.CLI/LANCommander.Launcher.CLI.csproj" -c Release --self-contained --runtime ${{ inputs.build_runtime }} -p:Version="${{ inputs.version_tag }}" -p:AssemblyVersion="${{ inputs.version_tag }}"

    - name: Bundle
      run: |
        Copy-Item -Force -Recurse -Verbose LANCommander.AutoUpdater/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/* LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/
        Copy-Item -Force -Recurse -Verbose LANCommander.Launcher.CLI/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/* LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/

    - name: Remove Extra Files
      run: |
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/wwwroot/_content/BootstrapBlazor.PdfReader/compat
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/wwwroot/_content/BootstrapBlazor.PdfReader/2.*
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/wwwroot/_content/BootstrapBlazor.PdfReader/build/pdf.sandbox.js
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/wwwroot/_content/BootstrapBlazor.PdfReader/build/*.map
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/wwwroot/_content/BootstrapBlazor.PdfReader/web/*.map
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/wwwroot/_content/AntDesign/less
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/wwwroot/_content/BlazorMonaco/lib/monaco-editor/min-maps
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/LANCommander.ico
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/LANCommanderDark.ico
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/package-lock.json
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/package.json
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/*.pdb
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/hostfxr.dll.bak
        rm -Recurse -Force -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/Libraries/locales

    - name: Rename Updater
      run: |
        mv -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/LANCommander.AutoUpdater.exe ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/LANCommander.AutoUpdater.exe.Update
        mv -ErrorAction Ignore ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/LANCommander.AutoUpdater ./LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/LANCommander.AutoUpdater.Update

    # Create ZIP file
    - name: Package Launcher Build
      uses: vimtor/action-zip@v1.2
      with:
        files: LANCommander.Launcher/bin/Release/net8.0/${{ inputs.build_runtime }}/publish/
        recursive: true
        dest: LANCommander.Launcher-${{ inputs.build_platform }}-${{ inputs.build_arch }}-v${{ inputs.version_tag }}.zip

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        path: LANCommander.Launcher-${{ inputs.build_platform }}-${{ inputs.build_arch }}-v${{ inputs.version_tag }}.zip
        name: LANCommander.Launcher-${{ inputs.build_platform }}-${{ inputs.build_arch }}-v${{ inputs.version_tag }}.zip