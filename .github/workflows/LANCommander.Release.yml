name: LANCommander Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: frabert/replace-string-action@v2
      name: Trim Tag Ref
      id: trim_tag_ref
      with:
        string: '${{ github.ref }}'
        pattern: 'refs/tags/v'
        replace-with: ''

    - uses: frabert/replace-string-action@v2
      name: Swap Path Backslashes
      id: swap_path_backslashes
      with:
        string: '${{ github.workspace }}'
        pattern: '\\'
        replace-with: '/'
        flags: g

    # Server
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.8.1
    - run: cd LANCommander/wwwroot/scripts; npm install
    
    # Launcher
    - run: cd LANCommander.Client; npm install

    # Windows
    - name: Publish Windows Client
      run: dotnet publish "./LANCommander.Client/LANCommander.Client.csproj" -c Release --self-contained --os win -p:Version="${{ steps.trim_tag_ref.outputs.replaced }}" -p:AssemblyVersion="${{ steps.trim_tag_ref.outputs.replaced }}"
    #- name: Remove Windows Extra Files
    #  run: rm -Recurse -Force ./_Build_Client_Windows/wwwroot/_content/AntDesign/less, ./_Build_Client_Windows/wwwroot/_content/compat, ./_Build_Client_Windows/*.pdb, ./_Build_Client_Windows/*.json, ./_Build_Client_Windows/*.ico

    # Create Windows ZIP file
    - name: Package Windows Client Build
      uses: vimtor/action-zip@v1.2
      with:
        files: LANCommander.Client/bin/Release/net8.0/win-x64/publish/
        recursive: true
        dest: LANCommander.Client-Windows-x64-v${{ steps.trim_tag_ref.outputs.replaced }}.zip

    # Draft Release
    - name: List contents of workspace
      run: Get-ChildItem -Path ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander.PowerShell/bin -Recurse
      if: always()

    - name: Draft Release
      uses: softprops/action-gh-release@v2
      with:
        name: v${{ steps.trim_tag_ref.outputs.replaced }}
        generate_release_notes: true
        draft: true
        files: |
          ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander-Windows-x64-*.zip
          ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander-Linux-x64-*.zip
          ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander-Linux-arm64-*.zip
          ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander-macOS-arm64-*.zip
          ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander.Client-Windows-x64-*.zip
          ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander.Client-Linux-x64-*.zip
          ${{ steps.swap_path_backslashes.outputs.replaced }}/LANCommander.Client-macOS-arm64-*.zip
          LANCommander.PlaynitePlugin_48e1bac7-e0a0-45d7-ba83-36f5e9e959fc_*.pext
