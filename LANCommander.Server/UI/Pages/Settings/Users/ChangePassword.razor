@page "/Settings/Users/{id:guid}/ChangePassword"
@inherits OwningComponentBase
@inject IMessageService MessageService
@inject ILogger<ChangePassword> Logger
@attribute [Authorize(Roles = RoleService.AdministratorRoleName)]

<PageHeader Title="Change Password" Subtitle="@User.UserName" />

<div style="padding: 0 24px;">
    <Form Model="Model" Layout="@FormLayout.Vertical">
        <FormItem Label="New Password">
            <InputPassword @bind-Value="context.NewPassword" />
        </FormItem>

        <FormItem Label="Confirm Password">
            <InputPassword @bind-Value="context.NewPasswordConfirm" />
        </FormItem>

        <FormItem>
            <Button OnClick="Change" Type="@ButtonType.Primary">Change</Button>
        </FormItem>
    </Form>
</div>

@code {
    [Parameter] public Guid Id { get; set; }

    UserService UserService;

    User User;
    ChangePasswordModel Model = new ChangePasswordModel();

    protected override async Task OnInitializedAsync()
    {
        UserService = ScopedServices.GetService<UserService>()!;

        if (Id != Guid.Empty)
            User = await UserService.GetAsync(Id);
    }

    async void Change()
    {
        try
        {
            await UserService.ChangePassword(User.UserName, Model.NewPassword);

            MessageService.Success("Password changed!");
        }
        catch (Exception ex)
        {
            MessageService.Error("The user's password could not be changed");
            Logger.LogError(ex, "The user's password could not be changed");
        }
    }

    public class ChangePasswordModel
    {
        public string NewPassword { get; set; }
        public string NewPasswordConfirm { get; set; }
    }
}
